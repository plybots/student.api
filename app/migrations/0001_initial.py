# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-10-29 11:23
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='About',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Sandstorm', models.TextField()),
                ('Product_description', models.TextField()),
                ('Version', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='BalanceForwarded',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Tuition', models.IntegerField(default=0)),
                ('Admission', models.IntegerField(default=0)),
                ('Computer', models.IntegerField(default=0)),
                ('Development_fee', models.IntegerField(default=0)),
                ('Uce', models.IntegerField(default=0)),
                ('Uace', models.IntegerField(default=0)),
                ('Mock', models.IntegerField(default=0)),
                ('Date_created', models.DateField(auto_now_add=True)),
                ('Last_modified', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ComputerPayableFees',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Fees', models.IntegerField()),
                ('IsClass1_applicable', models.BooleanField()),
                ('IsClass2_applicable', models.BooleanField()),
                ('IsClass3_applicable', models.BooleanField()),
                ('IsClass4_applicable', models.BooleanField()),
                ('IsClass5_applicable', models.BooleanField()),
                ('IsClass6_applicable', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Uce', models.IntegerField()),
                ('Uace', models.IntegerField()),
                ('Mock', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='LicensedTo',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=100)),
                ('Location', models.TextField()),
                ('Address', models.TextField()),
                ('Telephone', models.IntegerField()),
                ('Email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Misc',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Role', models.TextField()),
                ('Cost', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Others',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Identity_card', models.IntegerField()),
                ('Passport_photos', models.IntegerField()),
                ('Hair_cutting', models.IntegerField()),
                ('Library', models.IntegerField()),
                ('Medical', models.IntegerField()),
                ('Scouts', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Amount_paid', models.IntegerField()),
                ('Receipt_date', models.DateField()),
                ('Receipt_number', models.CharField(default='0000', max_length=8, unique=True)),
                ('Date_created', models.DateField(auto_now_add=True)),
                ('Last_modified', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Start', models.DateField()),
                ('End', models.DateField()),
                ('Term', models.IntegerField()),
                ('Year', models.IntegerField()),
                ('Is_active', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=25, unique=True)),
                ('Discount', models.IntegerField(default=0)),
                ('Tuition', models.IntegerField(default=0)),
                ('Boarding', models.IntegerField(default=0)),
                ('Admission', models.IntegerField(default=0)),
                ('Computer', models.IntegerField(default=0)),
                ('Development_fee', models.IntegerField(default=0)),
                ('Class_wear', models.IntegerField(default=0)),
                ('Sports_wear', models.IntegerField(default=0)),
                ('Casual_wear', models.IntegerField(default=0)),
                ('Sweater', models.IntegerField(default=0)),
                ('Jogging', models.IntegerField(default=0)),
                ('School_t_shirt', models.IntegerField(default=0)),
                ('Badge', models.IntegerField(default=0)),
                ('Identity_card', models.IntegerField(default=0)),
                ('Passport_photos', models.IntegerField(default=0)),
                ('Hair_cutting', models.IntegerField(default=0)),
                ('Library', models.IntegerField(default=0)),
                ('Medical', models.IntegerField(default=0)),
                ('Scouts', models.IntegerField(default=0)),
                ('Uce', models.IntegerField(default=0)),
                ('Uace', models.IntegerField(default=0)),
                ('Mock', models.IntegerField(default=0)),
                ('AdditionalClass1Fees', models.IntegerField()),
                ('AdditionalClass2Fees', models.IntegerField()),
                ('AdditionalClass3Fees', models.IntegerField()),
                ('AdditionalClass4Fees', models.IntegerField()),
                ('AdditionalClass5Fees', models.IntegerField()),
                ('AdditionalClass6Fees', models.IntegerField()),
                ('BAdditionalClass1Fees', models.IntegerField()),
                ('BAdditionalClass2Fees', models.IntegerField()),
                ('BAdditionalClass3Fees', models.IntegerField()),
                ('BAdditionalClass4Fees', models.IntegerField()),
                ('BAdditionalClass5Fees', models.IntegerField()),
                ('BAdditionalClass6Fees', models.IntegerField()),
                ('Sciences', models.IntegerField()),
                ('Arts', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SponsorReceipt',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Payment', models.IntegerField(default=0)),
                ('Receipt_number', models.CharField(default='XXXX', max_length=5, unique=True)),
                ('Receipt_date', models.DateField(default=b'2016-10-29')),
                ('Date_created', models.DateField(auto_now_add=True)),
                ('Last_modified', models.DateField(auto_now=True)),
                ('Session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Session')),
                ('Sponsor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Sponsor')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Student_no', models.IntegerField(unique=True)),
                ('Student_name', models.CharField(max_length=35)),
                ('Student_class', models.IntegerField(verbose_name=[1, 2, 3, 4, 5, 6])),
                ('Subjects', models.CharField(max_length=20)),
                ('Sponsor', models.IntegerField()),
                ('SponsorName', models.CharField(default='NONE', max_length=45, null=True)),
                ('Offering', models.CharField(default='NONE', max_length=45, null=True)),
                ('Computer', models.BooleanField(default=False)),
                ('Fees_offer', models.IntegerField(default=0)),
                ('Date_created', models.DateField(auto_now_add=True)),
                ('Last_modified', models.DateField(auto_now=True)),
            ],
            options={
                'ordering': ('Student_name',),
            },
        ),
        migrations.CreateModel(
            name='TermClassAdditionalFees',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Class1', models.IntegerField()),
                ('Class2', models.IntegerField()),
                ('Class3', models.IntegerField()),
                ('Class4', models.IntegerField()),
                ('Class5', models.IntegerField()),
                ('Class6', models.IntegerField()),
                ('Is_Boarding', models.BooleanField(default=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TermPayableFees',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Global', models.IntegerField()),
                ('Boarding', models.IntegerField(default=0)),
                ('Uce', models.IntegerField()),
                ('Uace', models.IntegerField()),
                ('Mock', models.IntegerField()),
                ('Sciences', models.IntegerField()),
                ('Arts', models.IntegerField()),
                ('Admission', models.IntegerField()),
                ('Development', models.IntegerField()),
                ('ComputerPayableFees', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.ComputerPayableFees')),
                ('TermClassAdditionalFees', models.ManyToManyField(null=True, to='app.TermClassAdditionalFees')),
            ],
        ),
        migrations.CreateModel(
            name='TermRegistration',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Offering', models.CharField(max_length=20)),
                ('Term', models.IntegerField()),
                ('Year', models.IntegerField()),
                ('Student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Student')),
            ],
        ),
        migrations.CreateModel(
            name='TextBooks',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=100)),
                ('Role', models.TextField()),
                ('Cost', models.IntegerField()),
                ('Receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Receipt')),
                ('Session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Session')),
                ('Student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Tuition',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Tuition', models.IntegerField()),
                ('Admission', models.IntegerField()),
                ('Computer', models.IntegerField()),
                ('Development_fee', models.IntegerField()),
                ('Date_created', models.DateField(auto_now_add=True)),
                ('Last_modified', models.DateField(auto_now=True)),
                ('Receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Receipt')),
                ('Session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Session')),
                ('Student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Student')),
            ],
        ),
        migrations.CreateModel(
            name='Uniform',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('Class_wear', models.IntegerField()),
                ('Sports_wear', models.IntegerField()),
                ('Casual_wear', models.IntegerField()),
                ('Sweater', models.IntegerField()),
                ('Jogging', models.IntegerField()),
                ('School_t_shirt', models.IntegerField()),
                ('Badge', models.IntegerField()),
                ('Receipt', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Receipt')),
                ('Session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Session')),
                ('Student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Student')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='session',
            unique_together=set([('Term', 'Year')]),
        ),
        migrations.AddField(
            model_name='receipt',
            name='Session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Session'),
        ),
        migrations.AddField(
            model_name='receipt',
            name='Student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Student'),
        ),
        migrations.AddField(
            model_name='others',
            name='Receipt',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Receipt'),
        ),
        migrations.AddField(
            model_name='others',
            name='Session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Session'),
        ),
        migrations.AddField(
            model_name='others',
            name='Student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Student'),
        ),
        migrations.AddField(
            model_name='misc',
            name='Receipt',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Receipt'),
        ),
        migrations.AddField(
            model_name='misc',
            name='Session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Session'),
        ),
        migrations.AddField(
            model_name='misc',
            name='Student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Student'),
        ),
        migrations.AddField(
            model_name='exam',
            name='Receipt',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Receipt'),
        ),
        migrations.AddField(
            model_name='exam',
            name='Session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Session'),
        ),
        migrations.AddField(
            model_name='exam',
            name='Student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Student'),
        ),
        migrations.AddField(
            model_name='balanceforwarded',
            name='Session',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='app.Session'),
        ),
        migrations.AddField(
            model_name='balanceforwarded',
            name='Student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.Student'),
        ),
        migrations.AlterUniqueTogether(
            name='termregistration',
            unique_together=set([('Student', 'Term', 'Year')]),
        ),
        migrations.AlterUniqueTogether(
            name='balanceforwarded',
            unique_together=set([('Student', 'Session')]),
        ),
    ]
